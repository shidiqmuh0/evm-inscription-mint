const config = {
    // Set how many cards you want to mint here; it is recommended not to exceed 50 at a time, as exceeding this limit may result in failure to be included in the blockchain.
    repeatCount: 1000,

    // Increase by how many times on the current gas basis.
    increaseGas: 1.3,

    // How long to pause between each transaction (in milliseconds; 1000 = 1 second).
    sleepTime: 1000,

    // Payment amount (default is 0 for transfers).
    payPrice: "0",

    // Your wallet's private key.
    privateKey: "",

    // Receiving address (can also be a contract address); if empty, it will be sent to yourself.
    receiveAddress: "0xc6e865c213c89ca42a622c5572d19f00d84d7a16",

    // Inscription JSON data (replace with the JSON-formatted data of the inscription you want to mint).
    // tokenJson: 'data:,{"p":"fair-20","op":"mint","tick":"fair","amt":"1000"}',
    // tokenJson: 'data:,{"a":"NextInscription","p":"oprc-20","op":"mint","tick":"PoS","amt":"10"}'
    tokenJson: '',

    // RPC node (compatible with EVM chains); use the node address of the chain you want to interact with.
    // eth => https://mainnet.infura.io/v3
    // arb => https://arb1.arbitrum.io/rpc
    // polygon => https://polygon-rpc.com
    // op => https://mainnet.optimism.io
    // linea => https://mainnet.infura.io/v3
    // scroll => https://rpc.scroll.io
    // zks => https://mainnet.era.zksync.io
    // bnbchain => https://bsc-dataseed1.bnbchain.org
    // conflux => https://evm.confluxrpc.com

    // rpcUrl: "https://arb1.arbitrum.io/rpc"
    rpcUrl: "https://evm.confluxrpc.com"
}

module.exports = config
